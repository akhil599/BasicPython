class Node:
    def __init__(self,item):
        self.data = item
        self.next = None
        self.prev = None

class Doubly_Linked_List:
    def __init__(self):
        self.head = None

    def append(self, item):
        if self.head is None:
            newnode = Node(item)
            newnode.prev = None
            self.head = newnode
        else:
            newnode = Node(item)
            curr = self.head
            while curr.next is not None:
                curr = curr.next
            curr.next = newnode
            newnode.prev = curr
            newnode.next = None

    def prepend(self, item):
        if self.head is None:
            newnode = Node(item)
            newnode.prev = None
            self.head = newnode

        else:
            newnode = Node(item)
            self.head.prev = newnode
            newnode.next = self.head
            self.head = newnode
            newnode.prev = None

    def print(self):
        curr = self.head
        while curr is not None:
            print(curr.data)
            curr = curr.next


z = Doubly_Linked_List()
z.append("K")
z.append("A")
z.append("N")
z.prepend("I")
z.prepend("T")
z.print()
